default namespace = "http://www.suse.com/1.0/yast2ns"
namespace a = "http://relaxng.org/ns/compatibility/annotations/1.0"
namespace config = "http://www.suse.com/1.0/configns"

include "common.rnc"

y2_firewall =
  fw_allow_fw_traceroute
  | fw_autoprotect_services
  | FW_DEV_EXT
  | FW_ALLOW_FW_TRACEROUTE
  | FW_DEV_INT
  | FW_DEV_DMZ
  | fw_ipsec_trust
  | FW_IPSEC_TRUST
  | FW_LOG_ACCEPT_ALL
  | FW_LOG_ACCEPT_CRIT
  | FW_LOG_DROP_ALL
  | FW_LOG_DROP_CRIT
  | fw_masq_nets
  | FW_MASQUERADE
  | fw_protect_from_internal
  | FW_ROUTE
  | FW_SERVICES_EXT_TCP
  | FW_SERVICES_EXT_UDP
  | FW_SERVICES_EXT_IP
  | start_firewall
  | enable_firewall
  | FW_ALLOW_FW_BROADCAST_DMZ
  | FW_ALLOW_FW_BROADCAST_INT
  | FW_ALLOW_FW_BROADCAST_EXT
  | FW_IGNORE_FW_BROADCAST_DMZ
  | FW_IGNORE_FW_BROADCAST_EXT
  | FW_IGNORE_FW_BROADCAST_INT
  | FW_FORWARD_ALWAYS_INOUT_DEV
  | FW_FORWARD_MASQ
  | FW_IPSEC_TRUST
  | FW_PROTECT_FROM_INT
  | FW_SERVICES_ACCEPT_DMZ
  | FW_SERVICES_ACCEPT_EXT
  | FW_SERVICES_ACCEPT_INT
  | FW_SERVICES_ACCEPT_RELATED_DMZ
  | FW_SERVICES_ACCEPT_RELATED_EXT
  | FW_SERVICES_ACCEPT_RELATED_INT
  | FW_SERVICES_DMZ_IP
  | FW_SERVICES_DMZ_RPC
  | FW_SERVICES_DMZ_TCP
  | FW_SERVICES_DMZ_UDP
  | FW_SERVICES_EXT_RPC
  | FW_SERVICES_INT_IP
  | FW_SERVICES_INT_RPC
  | FW_SERVICES_INT_TCP
  | FW_SERVICES_INT_UDP
  | FW_CONFIGURATIONS_DMZ
  | FW_CONFIGURATIONS_EXT
  | FW_CONFIGURATIONS_INT
  | FW_LOAD_MODULES
  | FW_ALLOW_PING_FW
  | FW_STOP_KEEP_ROUTING_STATE
  | FW_BOOT_FULL_INIT

YESNO = STRING_ATTR, ("yes" | "no")
firewall = element firewall { MAP, (y2_firewall* | y2_firewalld*) }
FW_CONFIGURATIONS_DMZ = element FW_CONFIGURATIONS_DMZ { STRING }
FW_CONFIGURATIONS_EXT = element FW_CONFIGURATIONS_EXT { STRING }
FW_CONFIGURATIONS_INT = element FW_CONFIGURATIONS_INT { STRING }
FW_LOAD_MODULES = element FW_LOAD_MODULES { STRING }
fw_allow_fw_traceroute = element fw_allow_fw_traceroute { STRING }
FW_ALLOW_FW_TRACEROUTE = element FW_ALLOW_FW_TRACEROUTE { STRING }
fw_autoprotect_services = element fw_autoprotect_services { STRING }
FW_DEV_EXT = element FW_DEV_EXT { STRING }
FW_DEV_INT = element FW_DEV_INT { STRING }
FW_DEV_DMZ = element FW_DEV_DMZ { STRING }
FW_LOG_ACCEPT_ALL = element FW_LOG_ACCEPT_ALL { YESNO }
FW_LOG_ACCEPT_CRIT = element FW_LOG_ACCEPT_CRIT { YESNO }
FW_LOG_DROP_ALL = element FW_LOG_DROP_ALL { YESNO }
FW_LOG_DROP_CRIT = element FW_LOG_DROP_CRIT { YESNO }
fw_masq_nets = element fw_masq_nets { STRING }
FW_MASQUERADE = element FW_MASQUERADE { YESNO }
fw_protect_from_internal = element fw_protect_from_internal { STRING }
FW_ROUTE = element FW_ROUTE { YESNO }
fw_services_ext_tcp = element fw_services_ext_tcp { STRING }
fw_ipsec_trust = element fw_ipsec_trust { STRING }
FW_SERVICES_EXT_UDP = element FW_SERVICES_EXT_UDP { STRING }
FW_SERVICES_EXT_TCP = element FW_SERVICES_EXT_TCP { STRING }
FW_SERVICES_EXT_IP = element FW_SERVICES_EXT_IP { STRING }
start_firewall = element start_firewall { BOOLEAN }
enable_firewall = element enable_firewall { BOOLEAN }
FW_ALLOW_FW_BROADCAST_DMZ = element FW_ALLOW_FW_BROADCAST_DMZ { STRING }
FW_ALLOW_FW_BROADCAST_EXT = element FW_ALLOW_FW_BROADCAST_EXT { STRING }
FW_ALLOW_FW_BROADCAST_INT = element FW_ALLOW_FW_BROADCAST_INT { STRING }
FW_IGNORE_FW_BROADCAST_DMZ = element FW_IGNORE_FW_BROADCAST_DMZ { STRING }
FW_IGNORE_FW_BROADCAST_EXT = element FW_IGNORE_FW_BROADCAST_EXT { STRING }
FW_IGNORE_FW_BROADCAST_INT = element FW_IGNORE_FW_BROADCAST_INT { STRING }
FW_FORWARD_ALWAYS_INOUT_DEV = element FW_FORWARD_ALWAYS_INOUT_DEV { STRING }
FW_FORWARD_MASQ = element FW_FORWARD_MASQ { STRING }
FW_IPSEC_TRUST = element FW_IPSEC_TRUST { STRING }
FW_PROTECT_FROM_INT = element FW_PROTECT_FROM_INT { STRING }
FW_SERVICES_ACCEPT_DMZ = element FW_SERVICES_ACCEPT_DMZ { STRING }
FW_SERVICES_ACCEPT_EXT = element FW_SERVICES_ACCEPT_EXT { STRING }
FW_SERVICES_ACCEPT_INT = element FW_SERVICES_ACCEPT_INT { STRING }
FW_SERVICES_ACCEPT_RELATED_DMZ = element FW_SERVICES_ACCEPT_RELATED_DMZ { STRING }
FW_SERVICES_ACCEPT_RELATED_EXT = element FW_SERVICES_ACCEPT_RELATED_EXT { STRING }
FW_SERVICES_ACCEPT_RELATED_INT = element FW_SERVICES_ACCEPT_RELATED_INT { STRING }
FW_SERVICES_DMZ_IP = element FW_SERVICES_DMZ_IP { STRING }
FW_SERVICES_DMZ_RPC = element FW_SERVICES_DMZ_RPC { STRING }
FW_SERVICES_DMZ_TCP = element FW_SERVICES_DMZ_TCP { STRING }
FW_SERVICES_DMZ_UDP = element FW_SERVICES_DMZ_UDP { STRING }
FW_SERVICES_EXT_RPC = element FW_SERVICES_EXT_RPC { STRING }
FW_SERVICES_INT_IP = element FW_SERVICES_INT_IP { STRING }
FW_SERVICES_INT_RPC = element FW_SERVICES_INT_RPC { STRING }
FW_SERVICES_INT_TCP = element FW_SERVICES_INT_TCP { STRING }
FW_SERVICES_INT_UDP = element FW_SERVICES_INT_UDP { STRING }
FW_ALLOW_PING_FW = element FW_ALLOW_PING_FW { YESNO }
FW_STOP_KEEP_ROUTING_STATE = element FW_STOP_KEEP_ROUTING_STATE { YESNO }
FW_BOOT_FULL_INIT = element FW_BOOT_FULL_INIT { YESNO }


y2_firewalld =
  zones
  | enable_firewall
  | start_firewall
  | default_zone
  | log_denied_packets

zones =
  element zones {
    LIST,
    element (zone | listentry) {
      MAP,
      (
        zone_name &
        zone_short? &
        zone_description? &
        zone_target? &
        fwd_interfaces? &
        fwd_ports? &
        fwd_protocols? &
        fwd_services? &
        masquerade?
      )
    }*
  }

fwd_services =
  element services {
    LIST,
    element (service | listentry) {STRING}*
  }

fwd_interfaces =
  element interfaces {
    LIST,
    element (interface | listentry) {STRING}*
  }

fwd_ports =
  element ports {
    LIST,
    element (port | listentry) {STRING}*
  }

fwd_protocols =
  element protocols {
    LIST,
    element (protocol | listentry) {STRING}*
  }

zone_name = element name { STRING }
zone_short = element short { STRING }
zone_description = element description { STRING }
zone_target = element target { STRING }
default_zone = element default_zone { STRING }
masquerade = element masquerade { BOOLEAN }
log_denied_packets = element log_denied_packets { STRING }
